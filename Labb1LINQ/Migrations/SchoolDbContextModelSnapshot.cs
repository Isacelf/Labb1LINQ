// <auto-generated />
using Labb1LINQ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb1LINQ.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb1LINQ.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "SUT23"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "SUT24"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "SUT25"
                        });
                });

            modelBuilder.Entity("Labb1LINQ.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            StudentName = "Isac",
                            TeacherId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1,
                            StudentName = "Nellie",
                            TeacherId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 1,
                            StudentName = "Calle",
                            TeacherId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 3,
                            StudentName = "Peter",
                            TeacherId = 1
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 3,
                            StudentName = "Amanda",
                            TeacherId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            CourseId = 3,
                            StudentName = "Sven",
                            TeacherId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            CourseId = 2,
                            StudentName = "Pontus",
                            TeacherId = 1
                        },
                        new
                        {
                            StudentId = 8,
                            CourseId = 2,
                            StudentName = "Sofie",
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("Labb1LINQ.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("studentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 6
                        });
                });

            modelBuilder.Entity("Labb1LINQ.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            SubjectName = "Programmering 1"
                        },
                        new
                        {
                            SubjectId = 2,
                            SubjectName = "Programmering 2"
                        },
                        new
                        {
                            SubjectId = 3,
                            SubjectName = "OOP"
                        },
                        new
                        {
                            SubjectId = 4,
                            SubjectName = "SQL"
                        },
                        new
                        {
                            SubjectId = 5,
                            SubjectName = "C#"
                        },
                        new
                        {
                            SubjectId = 6,
                            SubjectName = "Matematik"
                        });
                });

            modelBuilder.Entity("Labb1LINQ.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            TeacherName = "Anas"
                        },
                        new
                        {
                            TeacherId = 2,
                            TeacherName = "Reidar"
                        },
                        new
                        {
                            TeacherId = 3,
                            TeacherName = "Hanna"
                        });
                });

            modelBuilder.Entity("Labb1LINQ.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("teacherSubjects");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 6
                        },
                        new
                        {
                            TeacherId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            TeacherId = 2,
                            SubjectId = 4
                        },
                        new
                        {
                            TeacherId = 3,
                            SubjectId = 5
                        },
                        new
                        {
                            TeacherId = 3,
                            SubjectId = 6
                        });
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsSubjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentsStudentId", "SubjectsSubjectId");

                    b.HasIndex("SubjectsSubjectId");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.Property<int>("SubjectsSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersTeacherId")
                        .HasColumnType("int");

                    b.HasKey("SubjectsSubjectId", "TeachersTeacherId");

                    b.HasIndex("TeachersTeacherId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("Labb1LINQ.Models.Student", b =>
                {
                    b.HasOne("Labb1LINQ.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1LINQ.Models.Teacher", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Labb1LINQ.Models.StudentSubject", b =>
                {
                    b.HasOne("Labb1LINQ.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1LINQ.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Labb1LINQ.Models.TeacherSubject", b =>
                {
                    b.HasOne("Labb1LINQ.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1LINQ.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.HasOne("Labb1LINQ.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1LINQ.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubjectTeacher", b =>
                {
                    b.HasOne("Labb1LINQ.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1LINQ.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labb1LINQ.Models.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Labb1LINQ.Models.Teacher", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
